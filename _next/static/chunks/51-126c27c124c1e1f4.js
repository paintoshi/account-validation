"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[51],{90696:function(t,e,r){r.d(e,{FF:function(){return validateObject},S5:function(){return numberToBytesLE},Wd:function(){return equalBytes},_t:function(){return isBytes},bytesToNumberBE:function(){return bytesToNumberBE},ci:function(){return bytesToHex},dQ:function(){return bitMask},eV:function(){return concatBytes},gk:function(){return abytes},hexToBytes:function(){return hexToBytes},n$:function(){return createHmacDrbg},ql:function(){return ensureBytes},tL:function(){return numberToBytesBE},ty:function(){return bytesToNumberLE}}),BigInt(0);let n=BigInt(1),i=BigInt(2);function isBytes(t){return t instanceof Uint8Array||null!=t&&"object"==typeof t&&"Uint8Array"===t.constructor.name}function abytes(t){if(!isBytes(t))throw Error("Uint8Array expected")}let o=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function bytesToHex(t){abytes(t);let e="";for(let r=0;r<t.length;r++)e+=o[t[r]];return e}function hexToNumber(t){if("string"!=typeof t)throw Error("hex string expected, got "+typeof t);return BigInt(""===t?"0":`0x${t}`)}let s={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function asciiToBase16(t){return t>=s._0&&t<=s._9?t-s._0:t>=s._A&&t<=s._F?t-(s._A-10):t>=s._a&&t<=s._f?t-(s._a-10):void 0}function hexToBytes(t){if("string"!=typeof t)throw Error("hex string expected, got "+typeof t);let e=t.length,r=e/2;if(e%2)throw Error("padded hex string expected, got unpadded hex of length "+e);let n=new Uint8Array(r);for(let e=0,i=0;e<r;e++,i+=2){let r=asciiToBase16(t.charCodeAt(i)),o=asciiToBase16(t.charCodeAt(i+1));if(void 0===r||void 0===o){let e=t[i]+t[i+1];throw Error('hex string expected, got non-hex character "'+e+'" at index '+i)}n[e]=16*r+o}return n}function bytesToNumberBE(t){return hexToNumber(bytesToHex(t))}function bytesToNumberLE(t){return abytes(t),hexToNumber(bytesToHex(Uint8Array.from(t).reverse()))}function numberToBytesBE(t,e){return hexToBytes(t.toString(16).padStart(2*e,"0"))}function numberToBytesLE(t,e){return numberToBytesBE(t,e).reverse()}function ensureBytes(t,e,r){let n;if("string"==typeof e)try{n=hexToBytes(e)}catch(r){throw Error(`${t} must be valid hex string, got "${e}". Cause: ${r}`)}else if(isBytes(e))n=Uint8Array.from(e);else throw Error(`${t} must be hex string or Uint8Array`);let i=n.length;if("number"==typeof r&&i!==r)throw Error(`${t} expected ${r} bytes, got ${i}`);return n}function concatBytes(...t){let e=0;for(let r=0;r<t.length;r++){let n=t[r];abytes(n),e+=n.length}let r=new Uint8Array(e);for(let e=0,n=0;e<t.length;e++){let i=t[e];r.set(i,n),n+=i.length}return r}function equalBytes(t,e){if(t.length!==e.length)return!1;let r=0;for(let n=0;n<t.length;n++)r|=t[n]^e[n];return 0===r}let bitMask=t=>(i<<BigInt(t-1))-n,u8n=t=>new Uint8Array(t),u8fr=t=>Uint8Array.from(t);function createHmacDrbg(t,e,r){if("number"!=typeof t||t<2)throw Error("hashLen must be a number");if("number"!=typeof e||e<2)throw Error("qByteLen must be a number");if("function"!=typeof r)throw Error("hmacFn must be a function");let n=u8n(t),i=u8n(t),o=0,reset=()=>{n.fill(1),i.fill(0),o=0},h=(...t)=>r(i,n,...t),reseed=(t=u8n())=>{i=h(u8fr([0]),t),n=h(),0!==t.length&&(i=h(u8fr([1]),t),n=h())},gen=()=>{if(o++>=1e3)throw Error("drbg: tried 1000 values");let t=0,r=[];for(;t<e;){n=h();let e=n.slice();r.push(e),t+=n.length}return concatBytes(...r)};return(t,e)=>{let r;for(reset(),reseed(t);!(r=e(gen()));)reseed();return reset(),r}}let a={bigint:t=>"bigint"==typeof t,function:t=>"function"==typeof t,boolean:t=>"boolean"==typeof t,string:t=>"string"==typeof t,stringOrUint8Array:t=>"string"==typeof t||isBytes(t),isSafeInteger:t=>Number.isSafeInteger(t),array:t=>Array.isArray(t),field:(t,e)=>e.Fp.isValid(t),hash:t=>"function"==typeof t&&Number.isSafeInteger(t.outputLen)};function validateObject(t,e,r={}){let checkField=(e,r,n)=>{let i=a[r];if("function"!=typeof i)throw Error(`Invalid validator "${r}", expected function`);let o=t[e];if((!n||void 0!==o)&&!i(o,t))throw Error(`Invalid param ${String(e)}=${o} (${typeof o}), expected ${r}`)};for(let[t,r]of Object.entries(e))checkField(t,r,!1);for(let[t,e]of Object.entries(r))checkField(t,e,!0);return t}},17051:function(t,e,r){r.d(e,{secp256k1:function(){return P}});var n=r(53932),i=r(90696);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */let o=BigInt(0),s=BigInt(1),a=BigInt(2),u=BigInt(3),l=BigInt(4),f=BigInt(5),d=BigInt(8);function modular_mod(t,e){let r=t%e;return r>=o?r:e+r}function pow2(t,e,r){let n=t;for(;e-- >o;)n*=n,n%=r;return n}function invert(t,e){if(t===o||e<=o)throw Error(`invert: expected positive integers, got n=${t} mod=${e}`);let r=modular_mod(t,e),n=e,i=o,a=s,u=s,l=o;for(;r!==o;){let t=n/r,e=n%r,o=i-u*t,s=a-l*t;n=r,r=e,i=u,a=l,u=o,l=s}let f=n;if(f!==s)throw Error("invert: does not exist");return modular_mod(i,e)}BigInt(9),BigInt(16);let c=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function nLength(t,e){let r=void 0!==e?e:t.toString(2).length;return{nBitLength:r,nByteLength:Math.ceil(r/8)}}function getFieldBytesLength(t){if("bigint"!=typeof t)throw Error("field order must be bigint");let e=t.toString(2).length;return Math.ceil(e/8)}function getMinHashLength(t){let e=getFieldBytesLength(t);return e+Math.ceil(e/2)}var g=r(93527),m=r(66409);let HMAC=class HMAC extends m.kb{constructor(t,e){super(),this.finished=!1,this.destroyed=!1,(0,g.vp)(t);let r=(0,m.O0)(e);if(this.iHash=t.create(),"function"!=typeof this.iHash.update)throw Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let n=this.blockLen,i=new Uint8Array(n);i.set(r.length>n?t.create().update(r).digest():r);for(let t=0;t<i.length;t++)i[t]^=54;this.iHash.update(i),this.oHash=t.create();for(let t=0;t<i.length;t++)i[t]^=106;this.oHash.update(i),i.fill(0)}update(t){return(0,g.Gg)(this),this.iHash.update(t),this}digestInto(t){(0,g.Gg)(this),(0,g.aI)(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){let t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));let{oHash:e,iHash:r,finished:n,destroyed:i,blockLen:o,outputLen:s}=this;return t.finished=n,t.destroyed=i,t.blockLen=o,t.outputLen=s,t.oHash=e._cloneInto(t.oHash),t.iHash=r._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}};let hmac=(t,e,r)=>new HMAC(t,e).update(r).digest();hmac.create=(t,e)=>new HMAC(t,e);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */let y=BigInt(0),p=BigInt(1);function validateBasic(t){return!function(t){let e=c.reduce((t,e)=>(t[e]="function",t),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"});(0,i.FF)(t,e)}(t.Fp),(0,i.FF)(t,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...nLength(t.n,t.nBitLength),...t,p:t.Fp.ORDER})}let{bytesToNumberBE:b,hexToBytes:E}=i,w={Err:class extends Error{constructor(t=""){super(t)}},_parseInt(t){let{Err:e}=w;if(t.length<2||2!==t[0])throw new e("Invalid signature integer tag");let r=t[1],n=t.subarray(2,r+2);if(!r||n.length!==r)throw new e("Invalid signature integer: wrong length");if(128&n[0])throw new e("Invalid signature integer: negative");if(0===n[0]&&!(128&n[1]))throw new e("Invalid signature integer: unnecessary leading zero");return{d:b(n),l:t.subarray(r+2)}},toSig(t){let{Err:e}=w,r="string"==typeof t?E(t):t;i.gk(r);let n=r.length;if(n<2||48!=r[0])throw new e("Invalid signature tag");if(r[1]!==n-2)throw new e("Invalid signature: incorrect length");let{d:o,l:s}=w._parseInt(r.subarray(2)),{d:a,l:u}=w._parseInt(s);if(u.length)throw new e("Invalid signature: left bytes after parsing");return{r:o,s:a}},hexFromSig(t){let slice=t=>8&Number.parseInt(t[0],16)?"00"+t:t,h=t=>{let e=t.toString(16);return 1&e.length?`0${e}`:e},e=slice(h(t.s)),r=slice(h(t.r)),n=e.length/2,i=r.length/2,o=h(n),s=h(i);return`30${h(i+n+4)}02${s}${r}02${o}${e}`}},B=BigInt(0),v=BigInt(1),x=(BigInt(2),BigInt(3));BigInt(4);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */let S=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),I=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),N=BigInt(1),A=BigInt(2),divNearest=(t,e)=>(t+e/A)/e,O=function(t,e,r=!1,n={}){if(t<=o)throw Error(`Expected Field ORDER > 0, got ${t}`);let{nBitLength:c,nByteLength:g}=nLength(t,e);if(g>2048)throw Error("Field lengths over 2048 bytes are not supported");let m=function(t){if(t%l===u){let e=(t+s)/l;return function(t,r){let n=t.pow(r,e);if(!t.eql(t.sqr(n),r))throw Error("Cannot find square root");return n}}if(t%d===f){let e=(t-f)/d;return function(t,r){let n=t.mul(r,a),i=t.pow(n,e),o=t.mul(r,i),s=t.mul(t.mul(o,a),i),u=t.mul(o,t.sub(s,t.ONE));if(!t.eql(t.sqr(u),r))throw Error("Cannot find square root");return u}}return function(t){let e,r,n;let i=(t-s)/a;for(e=t-s,r=0;e%a===o;e/=a,r++);for(n=a;n<t&&function(t,e,r){if(r<=o||e<o)throw Error("Expected power/modulo > 0");if(r===s)return o;let n=s;for(;e>o;)e&s&&(n=n*t%r),t=t*t%r,e>>=s;return n}(n,i,t)!==t-s;n++);if(1===r){let e=(t+s)/l;return function(t,r){let n=t.pow(r,e);if(!t.eql(t.sqr(n),r))throw Error("Cannot find square root");return n}}let u=(e+s)/a;return function(t,o){if(t.pow(o,i)===t.neg(t.ONE))throw Error("Cannot find square root");let a=r,l=t.pow(t.mul(t.ONE,n),e),f=t.pow(o,u),d=t.pow(o,e);for(;!t.eql(d,t.ONE);){if(t.eql(d,t.ZERO))return t.ZERO;let e=1;for(let r=t.sqr(d);e<a&&!t.eql(r,t.ONE);e++)r=t.sqr(r);let r=t.pow(l,s<<BigInt(a-e-1));l=t.sqr(r),f=t.mul(f,r),d=t.mul(d,l),a=e}return f}}(t)}(t),y=Object.freeze({ORDER:t,BITS:c,BYTES:g,MASK:(0,i.dQ)(c),ZERO:o,ONE:s,create:e=>modular_mod(e,t),isValid:e=>{if("bigint"!=typeof e)throw Error(`Invalid field element: expected bigint, got ${typeof e}`);return o<=e&&e<t},is0:t=>t===o,isOdd:t=>(t&s)===s,neg:e=>modular_mod(-e,t),eql:(t,e)=>t===e,sqr:e=>modular_mod(e*e,t),add:(e,r)=>modular_mod(e+r,t),sub:(e,r)=>modular_mod(e-r,t),mul:(e,r)=>modular_mod(e*r,t),pow:(t,e)=>(function(t,e,r){if(r<o)throw Error("Expected power > 0");if(r===o)return t.ONE;if(r===s)return e;let n=t.ONE,i=e;for(;r>o;)r&s&&(n=t.mul(n,i)),i=t.sqr(i),r>>=s;return n})(y,t,e),div:(e,r)=>modular_mod(e*invert(r,t),t),sqrN:t=>t*t,addN:(t,e)=>t+e,subN:(t,e)=>t-e,mulN:(t,e)=>t*e,inv:e=>invert(e,t),sqrt:n.sqrt||(t=>m(y,t)),invertBatch:t=>(function(t,e){let r=Array(e.length),n=e.reduce((e,n,i)=>t.is0(n)?e:(r[i]=e,t.mul(e,n)),t.ONE),i=t.inv(n);return e.reduceRight((e,n,i)=>t.is0(n)?e:(r[i]=t.mul(e,r[i]),t.mul(e,n)),i),r})(y,t),cmov:(t,e,r)=>r?e:t,toBytes:t=>r?(0,i.S5)(t,g):(0,i.tL)(t,g),fromBytes:t=>{if(t.length!==g)throw Error(`Fp.fromBytes: expected ${g}, got ${t.length}`);return r?(0,i.ty)(t):(0,i.bytesToNumberBE)(t)}});return Object.freeze(y)}(S,void 0,void 0,{sqrt:function(t){let e=BigInt(3),r=BigInt(6),n=BigInt(11),i=BigInt(22),o=BigInt(23),s=BigInt(44),a=BigInt(88),u=t*t*t%S,l=u*u*t%S,f=pow2(l,e,S)*l%S,d=pow2(f,e,S)*l%S,c=pow2(d,A,S)*u%S,g=pow2(c,n,S)*c%S,m=pow2(g,i,S)*g%S,y=pow2(m,s,S)*m%S,p=pow2(y,a,S)*y%S,b=pow2(p,s,S)*m%S,E=pow2(b,e,S)*l%S,w=pow2(E,o,S)*g%S,B=pow2(w,r,S)*u%S,v=pow2(B,A,S);if(!O.eql(O.sqr(v),t))throw Error("Cannot find square root");return v}}),P=function(t,e){let create=e=>(function(t){let e=function(t){let e=validateBasic(t);return i.FF(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}(t),{Fp:r,n:n}=e,o=r.BYTES+1,a=2*r.BYTES+1;function modN(t){return modular_mod(t,n)}let{ProjectivePoint:u,normPrivateKeyToScalar:l,weierstrassEquation:f,isWithinCurveOrder:d}=function(t){let e=/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function(t){let e=validateBasic(t);i.FF(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:r,Fp:n,a:o}=e;if(r){if(!n.eql(o,n.ZERO))throw Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof r||"bigint"!=typeof r.beta||"function"!=typeof r.splitScalar)throw Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}(t),{Fp:r}=e,n=e.toBytes||((t,e,n)=>{let o=e.toAffine();return i.eV(Uint8Array.from([4]),r.toBytes(o.x),r.toBytes(o.y))}),o=e.fromBytes||(t=>{let e=t.subarray(1),n=r.fromBytes(e.subarray(0,r.BYTES)),i=r.fromBytes(e.subarray(r.BYTES,2*r.BYTES));return{x:n,y:i}});function weierstrassEquation(t){let{a:n,b:i}=e,o=r.sqr(t),s=r.mul(o,t);return r.add(r.add(s,r.mul(t,n)),i)}if(!r.eql(r.sqr(e.Gy),weierstrassEquation(e.Gx)))throw Error("bad generator point: equation left != right");function isWithinCurveOrder(t){return"bigint"==typeof t&&B<t&&t<e.n}function assertGE(t){if(!isWithinCurveOrder(t))throw Error("Expected valid bigint: 0 < bigint < curve.n")}function normPrivateKeyToScalar(t){let r;let{allowedPrivateKeyLengths:n,nByteLength:o,wrapPrivateKey:s,n:a}=e;if(n&&"bigint"!=typeof t){if(i._t(t)&&(t=i.ci(t)),"string"!=typeof t||!n.includes(t.length))throw Error("Invalid key");t=t.padStart(2*o,"0")}try{r="bigint"==typeof t?t:i.bytesToNumberBE((0,i.ql)("private key",t,o))}catch(e){throw Error(`private key must be ${o} bytes, hex or bigint, not ${typeof t}`)}return s&&(r=modular_mod(r,a)),assertGE(r),r}let s=new Map;function assertPrjPoint(t){if(!(t instanceof Point))throw Error("ProjectivePoint expected")}let Point=class Point{constructor(t,e,n){if(this.px=t,this.py=e,this.pz=n,null==t||!r.isValid(t))throw Error("x required");if(null==e||!r.isValid(e))throw Error("y required");if(null==n||!r.isValid(n))throw Error("z required")}static fromAffine(t){let{x:e,y:n}=t||{};if(!t||!r.isValid(e)||!r.isValid(n))throw Error("invalid affine point");if(t instanceof Point)throw Error("projective point not allowed");let is0=t=>r.eql(t,r.ZERO);return is0(e)&&is0(n)?Point.ZERO:new Point(e,n,r.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(t){let e=r.invertBatch(t.map(t=>t.pz));return t.map((t,r)=>t.toAffine(e[r])).map(Point.fromAffine)}static fromHex(t){let e=Point.fromAffine(o((0,i.ql)("pointHex",t)));return e.assertValidity(),e}static fromPrivateKey(t){return Point.BASE.multiply(normPrivateKeyToScalar(t))}_setWindowSize(t){this._WINDOW_SIZE=t,s.delete(this)}assertValidity(){if(this.is0()){if(e.allowInfinityPoint&&!r.is0(this.py))return;throw Error("bad point: ZERO")}let{x:t,y:n}=this.toAffine();if(!r.isValid(t)||!r.isValid(n))throw Error("bad point: x or y not FE");let i=r.sqr(n),o=weierstrassEquation(t);if(!r.eql(i,o))throw Error("bad point: equation left != right");if(!this.isTorsionFree())throw Error("bad point: not in prime-order subgroup")}hasEvenY(){let{y:t}=this.toAffine();if(r.isOdd)return!r.isOdd(t);throw Error("Field doesn't support isOdd")}equals(t){assertPrjPoint(t);let{px:e,py:n,pz:i}=this,{px:o,py:s,pz:a}=t,u=r.eql(r.mul(e,a),r.mul(o,i)),l=r.eql(r.mul(n,a),r.mul(s,i));return u&&l}negate(){return new Point(this.px,r.neg(this.py),this.pz)}double(){let{a:t,b:n}=e,i=r.mul(n,x),{px:o,py:s,pz:a}=this,u=r.ZERO,l=r.ZERO,f=r.ZERO,d=r.mul(o,o),c=r.mul(s,s),g=r.mul(a,a),m=r.mul(o,s);return m=r.add(m,m),f=r.mul(o,a),f=r.add(f,f),u=r.mul(t,f),l=r.mul(i,g),l=r.add(u,l),u=r.sub(c,l),l=r.add(c,l),l=r.mul(u,l),u=r.mul(m,u),f=r.mul(i,f),g=r.mul(t,g),m=r.sub(d,g),m=r.mul(t,m),m=r.add(m,f),f=r.add(d,d),d=r.add(f,d),d=r.add(d,g),d=r.mul(d,m),l=r.add(l,d),g=r.mul(s,a),g=r.add(g,g),d=r.mul(g,m),u=r.sub(u,d),f=r.mul(g,c),f=r.add(f,f),f=r.add(f,f),new Point(u,l,f)}add(t){assertPrjPoint(t);let{px:n,py:i,pz:o}=this,{px:s,py:a,pz:u}=t,l=r.ZERO,f=r.ZERO,d=r.ZERO,c=e.a,g=r.mul(e.b,x),m=r.mul(n,s),y=r.mul(i,a),p=r.mul(o,u),b=r.add(n,i),E=r.add(s,a);b=r.mul(b,E),E=r.add(m,y),b=r.sub(b,E),E=r.add(n,o);let w=r.add(s,u);return E=r.mul(E,w),w=r.add(m,p),E=r.sub(E,w),w=r.add(i,o),l=r.add(a,u),w=r.mul(w,l),l=r.add(y,p),w=r.sub(w,l),d=r.mul(c,E),l=r.mul(g,p),d=r.add(l,d),l=r.sub(y,d),d=r.add(y,d),f=r.mul(l,d),y=r.add(m,m),y=r.add(y,m),p=r.mul(c,p),E=r.mul(g,E),y=r.add(y,p),p=r.sub(m,p),p=r.mul(c,p),E=r.add(E,p),m=r.mul(y,E),f=r.add(f,m),m=r.mul(w,E),l=r.mul(b,l),l=r.sub(l,m),m=r.mul(b,y),d=r.mul(w,d),d=r.add(d,m),new Point(l,f,d)}subtract(t){return this.add(t.negate())}is0(){return this.equals(Point.ZERO)}wNAF(t){return u.wNAFCached(this,s,t,t=>{let e=r.invertBatch(t.map(t=>t.pz));return t.map((t,r)=>t.toAffine(e[r])).map(Point.fromAffine)})}multiplyUnsafe(t){let n=Point.ZERO;if(t===B)return n;if(assertGE(t),t===v)return this;let{endo:i}=e;if(!i)return u.unsafeLadder(this,t);let{k1neg:o,k1:s,k2neg:a,k2:l}=i.splitScalar(t),f=n,d=n,c=this;for(;s>B||l>B;)s&v&&(f=f.add(c)),l&v&&(d=d.add(c)),c=c.double(),s>>=v,l>>=v;return o&&(f=f.negate()),a&&(d=d.negate()),d=new Point(r.mul(d.px,i.beta),d.py,d.pz),f.add(d)}multiply(t){let n,i;assertGE(t);let{endo:o}=e;if(o){let{k1neg:e,k1:s,k2neg:a,k2:l}=o.splitScalar(t),{p:f,f:d}=this.wNAF(s),{p:c,f:g}=this.wNAF(l);f=u.constTimeNegate(e,f),c=u.constTimeNegate(a,c),c=new Point(r.mul(c.px,o.beta),c.py,c.pz),n=f.add(c),i=d.add(g)}else{let{p:e,f:r}=this.wNAF(t);n=e,i=r}return Point.normalizeZ([n,i])[0]}multiplyAndAddUnsafe(t,e,r){let n=Point.BASE,mul=(t,e)=>e!==B&&e!==v&&t.equals(n)?t.multiply(e):t.multiplyUnsafe(e),i=mul(this,e).add(mul(t,r));return i.is0()?void 0:i}toAffine(t){let{px:e,py:n,pz:i}=this,o=this.is0();null==t&&(t=o?r.ONE:r.inv(i));let s=r.mul(e,t),a=r.mul(n,t),u=r.mul(i,t);if(o)return{x:r.ZERO,y:r.ZERO};if(!r.eql(u,r.ONE))throw Error("invZ was invalid");return{x:s,y:a}}isTorsionFree(){let{h:t,isTorsionFree:r}=e;if(t===v)return!0;if(r)return r(Point,this);throw Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:t,clearCofactor:r}=e;return t===v?this:r?r(Point,this):this.multiplyUnsafe(e.h)}toRawBytes(t=!0){return this.assertValidity(),n(Point,this,t)}toHex(t=!0){return i.ci(this.toRawBytes(t))}};Point.BASE=new Point(e.Gx,e.Gy,r.ONE),Point.ZERO=new Point(r.ZERO,r.ONE,r.ZERO);let a=e.nBitLength,u=function(t,e){let constTimeNegate=(t,e)=>{let r=e.negate();return t?r:e},opts=t=>({windows:Math.ceil(e/t)+1,windowSize:2**(t-1)});return{constTimeNegate,unsafeLadder(e,r){let n=t.ZERO,i=e;for(;r>y;)r&p&&(n=n.add(i)),i=i.double(),r>>=p;return n},precomputeWindow(t,e){let{windows:r,windowSize:n}=opts(e),i=[],o=t,s=o;for(let t=0;t<r;t++){s=o,i.push(s);for(let t=1;t<n;t++)s=s.add(o),i.push(s);o=s.double()}return i},wNAF(e,r,n){let{windows:i,windowSize:o}=opts(e),s=t.ZERO,a=t.BASE,u=BigInt(2**e-1),l=2**e,f=BigInt(e);for(let t=0;t<i;t++){let e=t*o,i=Number(n&u);n>>=f,i>o&&(i-=l,n+=p);let d=e+Math.abs(i)-1,c=t%2!=0,g=i<0;0===i?a=a.add(constTimeNegate(c,r[e])):s=s.add(constTimeNegate(g,r[d]))}return{p:s,f:a}},wNAFCached(t,e,r,n){let i=t._WINDOW_SIZE||1,o=e.get(t);return o||(o=this.precomputeWindow(t,i),1!==i&&e.set(t,n(o))),this.wNAF(i,o,r)}}}(Point,e.endo?Math.ceil(a/2):a);return{CURVE:e,ProjectivePoint:Point,normPrivateKeyToScalar,weierstrassEquation,isWithinCurveOrder}}({...e,toBytes(t,e,n){let o=e.toAffine(),s=r.toBytes(o.x),a=i.eV;return n?a(Uint8Array.from([e.hasEvenY()?2:3]),s):a(Uint8Array.from([4]),s,r.toBytes(o.y))},fromBytes(t){let e=t.length,n=t[0],s=t.subarray(1);if(e===o&&(2===n||3===n)){let t;let e=i.bytesToNumberBE(s);if(!(B<e&&e<r.ORDER))throw Error("Point is not on curve");let o=f(e);try{t=r.sqrt(o)}catch(e){let t=e instanceof Error?": "+e.message:"";throw Error("Point is not on curve"+t)}let a=(t&v)===v;return(1&n)==1!==a&&(t=r.neg(t)),{x:e,y:t}}if(e===a&&4===n){let t=r.fromBytes(s.subarray(0,r.BYTES)),e=r.fromBytes(s.subarray(r.BYTES,2*r.BYTES));return{x:t,y:e}}throw Error(`Point of length ${e} was invalid. Expected ${o} compressed bytes or ${a} uncompressed bytes`)}}),numToNByteStr=t=>i.ci(i.tL(t,e.nByteLength));function isBiggerThanHalfOrder(t){let e=n>>v;return t>e}let slcNum=(t,e,r)=>i.bytesToNumberBE(t.slice(e,r));let Signature=class Signature{constructor(t,e,r){this.r=t,this.s=e,this.recovery=r,this.assertValidity()}static fromCompact(t){let r=e.nByteLength;return t=(0,i.ql)("compactSignature",t,2*r),new Signature(slcNum(t,0,r),slcNum(t,r,2*r))}static fromDER(t){let{r:e,s:r}=w.toSig((0,i.ql)("DER",t));return new Signature(e,r)}assertValidity(){if(!d(this.r))throw Error("r must be 0 < r < CURVE.n");if(!d(this.s))throw Error("s must be 0 < s < CURVE.n")}addRecoveryBit(t){return new Signature(this.r,this.s,t)}recoverPublicKey(t){let{r:o,s,recovery:a}=this,l=g((0,i.ql)("msgHash",t));if(null==a||![0,1,2,3].includes(a))throw Error("recovery id invalid");let f=2===a||3===a?o+e.n:o;if(f>=r.ORDER)throw Error("recovery id 2 or 3 invalid");let d=(1&a)==0?"02":"03",c=u.fromHex(d+numToNByteStr(f)),m=invert(f,n),y=modN(-l*m),p=modN(s*m),b=u.BASE.multiplyAndAddUnsafe(c,y,p);if(!b)throw Error("point at infinify");return b.assertValidity(),b}hasHighS(){return isBiggerThanHalfOrder(this.s)}normalizeS(){return this.hasHighS()?new Signature(this.r,modN(-this.s),this.recovery):this}toDERRawBytes(){return i.hexToBytes(this.toDERHex())}toDERHex(){return w.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return i.hexToBytes(this.toCompactHex())}toCompactHex(){return numToNByteStr(this.r)+numToNByteStr(this.s)}};function isProbPub(t){let e=i._t(t),r="string"==typeof t,n=(e||r)&&t.length;return e?n===o||n===a:r?n===2*o||n===2*a:t instanceof u}let c=e.bits2int||function(t){let r=i.bytesToNumberBE(t),n=8*t.length-e.nBitLength;return n>0?r>>BigInt(n):r},g=e.bits2int_modN||function(t){return modN(c(t))},m=i.dQ(e.nBitLength);function int2octets(t){if("bigint"!=typeof t)throw Error("bigint expected");if(!(B<=t&&t<m))throw Error(`bigint expected < 2^${e.nBitLength}`);return i.tL(t,e.nByteLength)}let b={lowS:e.lowS,prehash:!1},E={lowS:e.lowS,prehash:!1};return u.BASE._setWindowSize(8),{CURVE:e,getPublicKey:function(t,e=!0){return u.fromPrivateKey(t).toRawBytes(e)},getSharedSecret:function(t,e,r=!0){if(isProbPub(t))throw Error("first arg must be private key");if(!isProbPub(e))throw Error("second arg must be public key");let n=u.fromHex(e);return n.multiply(l(t)).toRawBytes(r)},sign:function(t,o,s=b){let{seed:a,k2sig:f}=function(t,o,s=b){if(["recovered","canonical"].some(t=>t in s))throw Error("sign() legacy options not supported");let{hash:a,randomBytes:f}=e,{lowS:m,prehash:y,extraEntropy:p}=s;null==m&&(m=!0),t=(0,i.ql)("msgHash",t),y&&(t=(0,i.ql)("prehashed msgHash",a(t)));let E=g(t),w=l(o),x=[int2octets(w),int2octets(E)];if(null!=p&&!1!==p){let t=!0===p?f(r.BYTES):p;x.push((0,i.ql)("extraEntropy",t))}let S=i.eV(...x);return{seed:S,k2sig:function(t){let e=c(t);if(!d(e))return;let r=invert(e,n),i=u.BASE.multiply(e).toAffine(),o=modN(i.x);if(o===B)return;let s=modN(r*modN(E+o*w));if(s===B)return;let a=(i.x===o?0:2)|Number(i.y&v),l=s;return m&&isBiggerThanHalfOrder(s)&&(l=isBiggerThanHalfOrder(s)?modN(-s):s,a^=1),new Signature(o,l,a)}}}(t,o,s),m=i.n$(e.hash.outputLen,e.nByteLength,e.hmac);return m(a,f)},verify:function(t,r,o,s=E){let a,l;if(r=(0,i.ql)("msgHash",r),o=(0,i.ql)("publicKey",o),"strict"in s)throw Error("options.strict was renamed to lowS");let{lowS:f,prehash:d}=s;try{if("string"==typeof t||i._t(t))try{l=Signature.fromDER(t)}catch(e){if(!(e instanceof w.Err))throw e;l=Signature.fromCompact(t)}else if("object"==typeof t&&"bigint"==typeof t.r&&"bigint"==typeof t.s){let{r:e,s:r}=t;l=new Signature(e,r)}else throw Error("PARSE");a=u.fromHex(o)}catch(t){if("PARSE"===t.message)throw Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(f&&l.hasHighS())return!1;d&&(r=e.hash(r));let{r:c,s:m}=l,y=g(r),p=invert(m,n),b=modN(y*p),B=modN(c*p),v=u.BASE.multiplyAndAddUnsafe(a,b,B)?.toAffine();if(!v)return!1;let x=modN(v.x);return x===c},ProjectivePoint:u,Signature,utils:{isValidPrivateKey(t){try{return l(t),!0}catch(t){return!1}},normPrivateKeyToScalar:l,randomPrivateKey:()=>{let t=getMinHashLength(e.n);return function(t,e,r=!1){let n=t.length,o=getFieldBytesLength(e),a=getMinHashLength(e);if(n<16||n<a||n>1024)throw Error(`expected ${a}-1024 bytes of input, got ${n}`);let u=r?(0,i.bytesToNumberBE)(t):(0,i.ty)(t),l=modular_mod(u,e-s)+s;return r?(0,i.S5)(l,o):(0,i.tL)(l,o)}(e.randomBytes(t),e.n)},precompute:(t=8,e=u.BASE)=>(e._setWindowSize(t),e.multiply(BigInt(3)),e)}}})({...t,hash:e,hmac:(t,...r)=>hmac(e,t,(0,m.eV)(...r)),randomBytes:m.O6});return Object.freeze({...create(e),create})}({a:BigInt(0),b:BigInt(7),Fp:O,n:I,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:t=>{let e=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-N*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),n=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=BigInt("0x100000000000000000000000000000000"),o=divNearest(e*t,I),s=divNearest(-r*t,I),a=modular_mod(t-o*e-s*n,I),u=modular_mod(-o*r-s*e,I),l=a>i,f=u>i;if(l&&(a=I-a),f&&(u=I-u),a>i||u>i)throw Error("splitScalar: Endomorphism failed, k="+t);return{k1neg:l,k1:a,k2neg:f,k2:u}}}},n.J);BigInt(0),P.ProjectivePoint}}]);